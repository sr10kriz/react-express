{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-express\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport EventsList from \"./components/EventsList\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport AddEvents from \"./components/AddEvents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEventsLoading, setIsEventsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  const fetchEventsHandler = () => {\n    setIsEventsLoading(true);\n    try {\n      setTimeout(async () => {\n        const response = await axios.get(\"http://localhost:3030/view\");\n        console.log(\"responseGET--\", response);\n        const getEventsList = response.data.responseData.map(resData => {\n          return {\n            id: resData.id,\n            eventName: resData.event_name,\n            eventDesc: resData.event_desc,\n            eventDate: resData.event_date\n          };\n        });\n        setEvents(getEventsList);\n        setIsEventsLoading(false);\n        if (response.data.status === 500 || undefined) {\n          throw new Error(\"Something went wrong\");\n        }\n      }, 1000);\n    } catch (err) {\n      console.log(\"Errrrr\", err);\n    }\n  };\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  function addMovieHandler(movie) {\n    console.log(movie);\n  }\n  let eventForm = \"\";\n  async function addEventHandler(event) {\n    const response = await axios.post(\"http://localhost:3030/create\", event);\n    console.log(\"responsePOST--\", response.data);\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }, this);\n  }\n  let eventsList = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No events are available at the moment...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 20\n  }, this);\n  if (events.length > 0) {\n    eventsList = /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 18\n    }, this);\n  }\n  if (isEventsLoading) {\n    eventsList = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 18\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(AddEvents, {\n        onAddEvent: addEventHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), eventForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchEventsHandler,\n        children: \"Fetch Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: eventsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zsVYAYEKRQ9zvHC1hTsiGDjDL+s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","EventsList","MoviesList","AddMovie","AddEvents","jsxDEV","_jsxDEV","App","_s","movies","setMovies","events","setEvents","isLoading","setIsLoading","isEventsLoading","setIsEventsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","fetchEventsHandler","setTimeout","get","console","log","getEventsList","responseData","resData","eventName","event_name","eventDesc","event_desc","eventDate","event_date","status","undefined","err","addMovieHandler","movie","eventForm","addEventHandler","event","post","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","eventsList","Fragment","onAddMovie","onClick","onAddEvent","_c","$RefreshReg$"],"sources":["D:/react-express/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nimport EventsList from \"./components/EventsList\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport AddEvents from \"./components/AddEvents\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEventsLoading, setIsEventsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n\n      const transformedMovies = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const fetchEventsHandler = () => {\n    setIsEventsLoading(true);\n    try {\n      setTimeout(async () => {\n        const response = await axios.get(\"http://localhost:3030/view\");\n        console.log(\"responseGET--\", response);\n        const getEventsList = response.data.responseData.map((resData) => {\n          return {\n            id: resData.id,\n            eventName: resData.event_name,\n            eventDesc: resData.event_desc,\n            eventDate: resData.event_date,\n          };\n        });\n        setEvents(getEventsList);\n        setIsEventsLoading(false);\n        if (response.data.status === 500 || undefined) {\n          throw new Error(\"Something went wrong\");\n        }\n      }, 1000);\n    } catch (err) {\n      console.log(\"Errrrr\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  function addMovieHandler(movie) {\n    console.log(movie);\n  }\n\n  let eventForm = \"\";\n  async function addEventHandler(event) {\n    const response = await axios.post(\"http://localhost:3030/create\", event);\n    console.log(\"responsePOST--\", response.data);\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  let eventsList = <p>No events are available at the moment...</p>;\n\n  if (events.length > 0) {\n    eventsList = <EventsList events={events} />;\n  }\n\n  if (isEventsLoading) {\n    eventsList = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n      <section>\n        <AddEvents onAddEvent={addEventHandler} />\n        {eventForm}\n      </section>\n      <section>\n        <button onClick={fetchEventsHandler}>Fetch Events</button>\n      </section>\n      <section>{eventsList}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}